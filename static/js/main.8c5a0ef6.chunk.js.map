{"version":3,"sources":["routes.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/Container/Container.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/store.js","index.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","components/UserMenu/UserMenu.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","components/Loader/Loader.js","components/AppBar/AppBar.module.css","components/Container/Container.module.css","components/Loader/Loader.module.css","App.module.css","redux/auth/auth-actions.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-reducer.js"],"names":["routes","home","contacts","register","login","connect","state","isAuthenticated","authSelectors","getIsAuthenticated","to","exact","className","styles","link","activeClassName","activeLink","mapDispatchToProps","onLogout","authOperations","logOut","post","getUserPost","container","type","onClick","AuthNav","header","Container","children","Component","component","redirectTo","routeProps","render","props","restricted","HomePage","lazy","LoginPage","RegisterPage","ContactsPage","App","this","onGetCurrentUser","title","fallback","path","getCurrentUser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById","module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","saveContactRequest","saveContactSuccess","saveContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","updateFilter","fetchContacts","dispatch","axios","get","then","data","catch","error","message","saveContact","name","number","contact","deleteContact","id","delete","getfilter","filter","getAllContacts","items","getLoading","getfilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","itemsReducer","createReducer","_","payload","action","filterReducer","combineReducers","Loading","loader","color","height","width","timeout","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","defaults","baseURL","token","headers","common","Authorization","credentials","a","authActions","response","logIn","getState","persistedToken","user","email","initialUserState","setError"],"mappings":"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","file":"static/js/main.8c5a0ef6.chunk.js","sourcesContent":["const routes = {\r\n    home: '/',\r\n    contacts: '/contacts',\r\n    register: '/register',\r\n    login: '/login',\r\n};\r\nexport default routes;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nimport styles from './Navigation.module.css';\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n    <nav>\r\n        <NavLink\r\n            to='/'\r\n            exact\r\n            className={styles.link}\r\n            activeClassName={styles.activeLink}\r\n        >\r\n            Home\r\n        </NavLink>\r\n        {isAuthenticated && (\r\n            <NavLink\r\n            to='/contacts'\r\n            exact\r\n            className={styles.link}\r\n            activeClassName={styles.activeLink}\r\n        >\r\n            Сontacts\r\n        </NavLink> )}\r\n    </nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n})\r\n\r\n// eslint-disable-next-line\r\nexport default connect(mapStateToProps)(Navigation);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\n\r\nimport styles from './UserMenu.module.css';\r\n\r\nconst UserMenu = ({ post, onLogout }) => (\r\n    <div className={styles.container}>\r\n        <span className={styles.post}>Welcome, {post}</span>\r\n        <button type=\"button\" onClick={onLogout}>\r\n            Logout\r\n        </button>\r\n    </div>\r\n);\r\nconst mapStateToProps = state => ({\r\n    post: authSelectors.getUserPost(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport routes from '../../routes';\r\n\r\nimport styles from './AuthNav.module.css'\r\n\r\nconst AuthNav = () => (\r\n    <div>\r\n        <NavLink\r\n            to={routes.register}\r\n            exact\r\n            className={styles.link}\r\n            activeClassName={styles.activeLink}\r\n        >\r\n            Register now\r\n        </NavLink>\r\n        <NavLink\r\n            to={routes.login}\r\n            exact\r\n            className={styles.link}\r\n            activeClassName={styles.activeLink}\r\n        >\r\n            Log In\r\n        </NavLink>\r\n    </div>\r\n);\r\n\r\nexport default AuthNav;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nimport styles from './AppBar.module.css';\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n    <header className={styles.header}>\r\n        <Navigation />\r\n        {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);","import React from 'react';\r\nimport styles from  './Container.module.css'\r\n\r\n\r\nconst Container = ({ children }) => <div className={styles.Container}>{children}</div>;\r\n\r\nexport default Container","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React, { Component, Suspense, lazy } from \"react\";\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport routes from './routes';\r\nimport AppBar from './components/AppBar/AppBar';\r\nimport Container from \"./components/Container\";\r\nimport { authOperations } from \"./redux/auth\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport PublicRoute from \"./components/PublicRoute\";\r\nimport Loading from \"./components/Loader\";\r\n\r\nimport styles from \"./App.module.css\";\r\n\r\nconst HomePage = lazy(() =>\r\n  import('./views/HomePage/HomePage' /*webpackChunkName: \"home-view\" */),\r\n);\r\nconst LoginPage = lazy(() =>\r\n  import('./views/LoginPage/LoginPage' /*webpackChunkName: \"login-view\" */)\r\n);\r\nconst RegisterPage = lazy(() =>\r\n  import('./views/RegisterPage/RegisterPage' /*webpackChunkName: \"register-view\" */)\r\n);\r\nconst ContactsPage = lazy(() =>\r\n  import('./views/ContactsPage/ContactsPage' /*webpackChunkName: \"contacts-view\" */)\r\n);\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <AppBar />\r\n        <h1 className={styles.title}>Phonebook</h1>\r\n        <Suspense fallback={<Loading />}>\r\n          <Switch>\r\n          <Route exact path={routes.home} component={HomePage} />\r\n          <PublicRoute\r\n            path={routes.register}\r\n            restricted\r\n            redirectTo={routes.contacts}\r\n            component={RegisterPage}\r\n          />\r\n          <PublicRoute\r\n            path={routes.login}\r\n            restricted\r\n            redirectTo={routes.contacts}\r\n            component={LoginPage}\r\n          />\r\n          <PrivateRoute\r\n            path={routes.contacts}\r\n            redirectTo={routes.login}\r\n            component={ContactsPage}\r\n          />\r\n        </Switch>\r\n        </Suspense>\r\n        \r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onGetCurrentUser: authOperations.getCurrentUser,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(App)","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport { contactsReducer } from './contacts';\r\nimport { authReducer } from './auth';\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n    logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whitelist: ['token'],\r\n\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n        contacts: contactsReducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line\r\nexport default { store, persistor };\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport \"./index.module.css\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__2BrgH\",\"activeLink\":\"Navigation_activeLink__TOd7q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__7iSdj\",\"activeLink\":\"AuthNav_activeLink__zEX_0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__2q1Bv\",\"post\":\"UserMenu_post__1_fCQ\"};","\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const saveContactRequest = createAction('contacts/saveContactRequest');\r\nexport const saveContactSuccess = createAction('contacts/saveContactSuccess');\r\nexport const saveContactError = createAction('contacts/saveContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\n\r\nexport const updateFilter = createAction('contact/Filter');\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\nimport {\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    saveContactRequest,\r\n    saveContactSuccess,\r\n    saveContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError\r\n} from './contacts-actions';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n    dispatch(fetchContactRequest());\r\n\r\n    axios\r\n        .get('/contacts')\r\n        .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n        .catch(error => dispatch(fetchContactError(error.message)))\r\n}\r\n\r\nconst saveContact = ({ name, number }) => dispatch => {\r\n    const contact = { name, number };\r\n\r\n    dispatch(saveContactRequest());\r\n\r\n    axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) =>\r\n            dispatch(saveContactSuccess(data)))\r\n        .catch(error =>\r\n            dispatch(saveContactError(error.message)))\r\n\r\n}\r\n\r\nconst deleteContact = id => dispatch => {\r\n\r\n    dispatch(deleteContactRequest());\r\n    axios\r\n        .delete(`/contacts/${id}`)\r\n        .then(() => dispatch(deleteContactSuccess(id)))\r\n        .catch(error =>\r\n            dispatch(deleteContactError(error.message)))\r\n\r\n}\r\n// eslint-disable-next-line\r\nexport default { fetchContacts, saveContact, deleteContact }","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getfilter = state => state.contacts.filter;\r\n\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getfilteredContacts = createSelector(\r\n    [getfilter, getAllContacts],\r\n    (filter, contacts) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(normalizedFilter));\r\n    }\r\n);\r\n// eslint-disable-next-line\r\nexport default {\r\n    getLoading,\r\n    getfilter,\r\n    getAllContacts,\r\n    getfilteredContacts\r\n}\r\n    \r\n\r\n\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    saveContactRequest,\r\n    saveContactSuccess,\r\n    saveContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    updateFilter\r\n} from '../contacts/contacts-actions';\r\n\r\nconst itemsReducer = createReducer([], {\r\n    [fetchContactSuccess]: (_, { payload }) => payload,\r\n    [saveContactSuccess]: (state, action) => [action.payload, ...state],\r\n    [deleteContactSuccess]: (state, action) => state.filter(({ id }) => id !== action.payload),\r\n}\r\n)\r\n\r\nconst filterReducer = createReducer('', {\r\n    [updateFilter]: (_, { payload }) => payload\r\n})\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n    [saveContactRequest]: () => true,\r\n    [saveContactSuccess]: () => false,\r\n    [saveContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false\r\n});\r\n\r\nexport default combineReducers({\r\n    items: itemsReducer,\r\n    filter: filterReducer,\r\n    loading\r\n\r\n});\r\n\r\n","import Loader from \"react-loader-spinner\";\r\nimport styles from \"./Loader.module.css\";\r\n\r\nconst Loading = () => {\r\n  return <Loader className={styles.loader}\r\n    type=\"ThreeDots\"\r\n    color=\"green\"\r\n    height={70}\r\n    width={70}\r\n    timeout={3000} //3 secs\r\n      />\r\n}\r\n\r\nexport default Loading","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__3jTeW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__25tgC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2cNUS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1F_vB\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserError,\r\n};\r\n\r\n","import axios from \"axios\";\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n    dispatch(authActions.registerRequest());\r\n\r\n    try {\r\n        const response = await axios.post('/users/signup', credentials);\r\n        token.set(response.data.token);\r\n        dispatch(authActions.registerSuccess(response.data));\r\n    }\r\n    catch (error) {\r\n\r\n        dispatch(authActions.registerError(error.message));\r\n    }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n    dispatch(authActions.loginRequest());\r\n\r\n    try {\r\n        const response = await axios.post('/users/login', credentials);\r\n        token.set(response.data.token);\r\n        dispatch(authActions.loginSuccess(response.data));\r\n    }\r\n    catch (error) {\r\n        dispatch(authActions.loginError(error.message));\r\n    }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n    dispatch(authActions.logoutRequest());\r\n\r\n    try {\r\n        await axios.post('/users/logout');\r\n        token.unset();\r\n        dispatch(authActions.logoutSuccess());\r\n    }\r\n    catch (error) {\r\n        dispatch(authActions.logoutError(error.message));\r\n    }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n    const {\r\n        auth: { token: persistedToken },\r\n    } = getState();\r\n\r\n    if (!persistedToken) {\r\n        return;\r\n    }\r\n    token.set(persistedToken);\r\n\r\n    dispatch(authActions.getCurrentUserRequest());\r\n\r\n    try {\r\n        const response = await axios.get('/users/current');\r\n\r\n        dispatch(authActions.getCurrentUserSuccess(response.data));\r\n    }\r\n    catch (error) {\r\n        dispatch(authActions.getCurrentUserError(error.message));\r\n    }\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n    register,\r\n    logIn,\r\n    logOut,\r\n    getCurrentUser\r\n};","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUserPost = state => state.auth.user.email;\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n    getIsAuthenticated,\r\n    getUserPost\r\n}","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.logoutSuccess]: () => initialUserState,\r\n    [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n    [authActions.registerError]: setError,\r\n    [authActions.loginError]: setError,\r\n    [authActions.logoutError]: setError,\r\n    [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n    [authActions.registerSuccess]: () => true,\r\n    [authActions.loginSuccess]: () => true,\r\n    [authActions.getCurrentUserSuccess]: () => true,\r\n    [authActions.logoutSuccess]: () => false,\r\n    [authActions.registerError]: () => false,\r\n    [authActions.loginError]: () => false,\r\n    [authActions.getCurrentUserError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n    user,\r\n    isAuthenticated,\r\n    token,\r\n    error,\r\n});"],"sourceRoot":""}